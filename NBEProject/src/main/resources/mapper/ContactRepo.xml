<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lec.spring.repository.ContactRepo">
    <insert id="insert" flushCache="true" parameterType="com.lec.spring.domain.shop.Contact"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into contact (user_id, goods_no, title, content, type)
            VALUE (#{user_id}, #{goods_no}, #{title}, #{content} ,#{type})
    </insert>

    <delete id="delete" flushCache="true">
        delete from contact
        where id=#{param1}
    </delete>

    <update id="update" flushCache="true" parameterType="com.lec.spring.domain.shop.Contact">
        update contact
        set title=#{title}, content=#{content}
        where id=#{id}
    </update>

    <!-- 관리자가 답변한 문의사항 업데이트 -->
    <update id="answerupdate" parameterType="com.lec.spring.domain.shop.Contact">
        UPDATE contact
        SET status = #{status}, answer = #{answer}
        WHERE id = #{id}
    </update>

    <select id="showById" resultType="com.lec.spring.domain.shop.Contact" flushCache="true">
        select * from contact
        where id=#{param1}
    </select>

    <select id="showMyContact" resultType="com.lec.spring.domain.shop.Contact" flushCache="true">
        select * from contact
        where user_id=#{param1}
    </select>

    <update id="answer" flushCache="true" parameterType="com.lec.spring.domain.shop.Contact">
        update contact set status=#{status}, answer=#{answer}
        where id=#{id}
    </update>

    <select id="findAllContacts" resultType="com.lec.spring.domain.shop.Contact">
        SELECT id, user_id, goods_no, title, content, status, answer, regdate, type
        FROM contact
        ORDER BY regdate DESC
        limit #{limit} offset #{offset}
    </select>

    <select id="allContacts" resultType="com.lec.spring.domain.shop.Contact">
    SELECT id, user_id, goods_no, title, content, status, answer, regdate, type
    FROM contact
    </select>

    <select id="countAllContacts" resultType="long">
        SELECT count(*) FROM contact
    </select>

    <select id="countUnanswered" resultType="Long">
        SELECT COUNT(*) from contact WHERE status = '대기 중'
    </select>

    <select id="cancel" resultType="Long">
        SELECT COUNT(*) from contact WHERE type = '결제 취소'
    </select>

    <select id="type" resultType="String">
        SELECT type FROM contact WHERE user_id = #{user_id} LIMIT 1
    </select>

    <select id="findContactsByStatus" resultType="com.lec.spring.domain.shop.Contact">
        SELECT id, user_id, goods_no, title, content, status, answer, regdate, type
        FROM contact
        WHERE status = #{status}
        ORDER BY regdate DESC
        LIMIT #{limit} OFFSET #{offset}

    </select>

    <select id="countContactsByStatus" resultType="long">
        SELECT count(*) FROM contact WHERE status = #{status}
    </select>

    <!--  타입  -->
    <select id="findContactsByType" resultType="com.lec.spring.domain.shop.Contact">
        SELECT * FROM contact WHERE type = #{type} ORDER BY id DESC LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 타입   -->
    <select id="countContactsByType" resultType="Long">
        SELECT COUNT(*) FROM contact WHERE type = #{type}
    </select>

    <select id="findContactsByStatusAndType" resultType="com.lec.spring.domain.shop.Contact">
        SELECT * FROM contact
        WHERE status = #{status} AND type = #{type}
        ORDER BY regdate DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countContactsByStatusAndType" resultType="long">
        SELECT count(*) FROM contact
        WHERE status = #{status} AND type = #{type}
    </select>

    <select id="countProductInquiries" resultType="Long">
        SELECT COUNT(*) FROM contact WHERE type = '상품문의'
    </select>

    <select id="countProductAndType" resultType="Long">
        SELECT COUNT(*) FROM contact WHERE type = '상품문의' AND status = '답변 대기'
    </select>


</mapper>